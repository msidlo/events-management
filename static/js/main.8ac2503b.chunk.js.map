{"version":3,"sources":["mocks sync /^/.//.*/.json$","moduls/config.js","moduls/reducer.js","moduls/api.js","mocks/axios.js","moduls/redux.js","components/leftDrawer.js","screens/dashboard.js","components/eventsToolbar/eventsToolbar.js","components/eventDescription/eventDescription.js","components/eventsList/eventsList.js","screens/events.js","moduls/validation.js","components/eventEdit/eventEdit.js","screens/createEvent.js","routes.js","theme.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","config","apiBaseUrl","apiUrls","fetchEvents","createEvent","initialState","events","eventsFilter","pagination","page","size","filter","sort","event","type","payload","request","url","method","data","api","this","client","axios","create","baseURL","responseType","process","REACT_APP_USE_MOCKS","mock","MockAdapter","RegExp","onPost","reply","response","require","replace","Promise","reject","setTimeout","mockAxios","persistConfig","key","storage","persistedReducer","persistReducer","state","action","applyMiddleware","axiosMiddleware","getAxiosClient","logger","store","next","createStore","compose","persistor","persistStore","useStyles","makeStyles","theme","drawer","width","sizes","drawerPaper","toolbar","mixins","LeftDrawer","props","classes","Drawer","className","variant","paper","anchor","Divider","List","ListItemLink","icon","text","to","noPadding","renderLink","React","useMemo","forwardRef","linkProps","ref","ListItem","button","component","ListItemIcon","ListItemText","primary","Dashboard","r","Routes","find","path","routes","style","Styles","wrapper","content","route","index","children","Component","display","justifyConent","padding","flexGrow","withRouter","connect","EventsToolbar","container","Button","withStyles","margin","spacing","row","alignItems","paddingTop","icons","regular","timeDate","fontSize","typography","fontSizeMedium","EventDescription","Date","startTime","toLocaleString","endTime","participants","join","note","EventsList","expandEventDetail","item","expanded","setState","currentTime","past","current","future","forEach","beginning","getTime","end","push","splitEventsByTime","titles","Box","l","list","subheader","i","data-testid","listSection","ListSubheader","ExpansionPanel","onChange","toggleItem","bind","ExpansionPanelSummary","expandIcon","aria-controls","Typography","heading","name","ExpansionPanelDetails","fontSizeLarge","flexShrink","backgroundColor","palette","lightGrey","Events","length","root","mapDispatchToProps","EventValidationSchema","Yup","shape","min","required","EventEdit","values","setSubmitting","errors","getDefaultEvent","utils","DateFnsUtils","initialValues","validationSchema","onSubmit","isSubmitting","touched","submitForm","autoComplete","TextField","label","DateTimePicker","disablePast","minDate","placeholder","multiline","rows","color","disabled","hasErrors","onClick","flexDirection","CreateEvent","LIGHT_THEME","createMuiTheme","light","main","dark","contrastText","secondary","h5","fontWeight","fontSizeSmall","RouteWithSubRoutes","render","App","loading","ThemeProvider","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8ac2503b.chunk.js","sourcesContent":["var map = {\n\t\"./createEvent.json\": 225,\n\t\"./fetchEvents.json\": 226\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 224;","// @flow\n\ninterface ApiConfig {\n  apiBaseUrl: string,\n  apiUrls: {\n    fetchEvents: string,\n    createEvent: string\n  }\n}\n\nexport interface Configuration {\n  api: ApiConfig,\n}\n\nlet apiBaseUrl = 'https://www.cool.com/'\nlet fetchEvents = '/fetchEvents'\nlet createEvent = '/createEvent'\n\nif(process.env.NODE_ENV !== 'production') {\n    apiBaseUrl = 'https://www.dev.cool.com/'\n}\n\nexport const config: Configuration = {\n  api: {\n    apiBaseUrl,\n    apiUrls: {\n      fetchEvents,\n      createEvent\n    }\n  },\n}\n","// @flow\nimport { config } from './config'\n\nexport type EventsFilter = {\n  pagination: {\n    page: number,\n    size: number\n  },\n  filter: {\n    // additional set up\n  },\n  sort: {\n    // additional set up\n  }\n}\n\n/**\n* State of the application\n*/\nexport type State = {\n  events: Array<any>,\n  eventsFilter: EventsFilter\n}\n\nexport const initialState: State = {\n  events: [],\n  eventsFilter: {\n    pagination: {\n      page: 0,\n      size: 20\n    },\n    filter: {},\n    sort: {}\n  }\n}\n\nexport const GET_EVENTS = 'api/GET_EVENTS'\nexport const GET_EVENTS_SUCCESS = 'api/GET_EVENTS_SUCCESS'\nexport const GET_EVENTS_FAIL = 'api/GET_EVENTS_FAIL'\n\nexport const CREATE_EVENT = 'api/CREATE_EVENT'\nexport const CREATE_EVENT_SUCCESS = 'api/CREATE_EVENT_SUCCESS'\nexport const CREATE_EVENT_FAIL = 'api/CREATE_EVENT_FAIL'\n\nexport default function reducer(state: State = initialState, action: any): State {\n\n  switch (action.type) {\n    case GET_EVENTS:\n      return {\n        ...state\n      }\n    case GET_EVENTS_SUCCESS:\n      return {\n        ...state,\n        events: action.payload.data\n      }\n    case GET_EVENTS_FAIL:\n      return {\n        ...state\n      }\n    case CREATE_EVENT:\n      return {\n        ...state\n      }\n    case CREATE_EVENT_SUCCESS:\n      return {\n        ...state,\n        events: [\n          ...state.events,\n          action.payload.data\n        ]\n      }\n    case CREATE_EVENT_FAIL:\n      return {\n        ...state\n      }\n    default:\n      return state\n  }\n}\n\nexport function fetchEvents(filter: EventsFilter) {\n  return {\n    type: GET_EVENTS,\n    payload: {\n      request: {\n        url: config.api.apiUrls.fetchEvents,\n        method: 'post',\n        data: {\n          filter\n        },\n      }\n    } \n  }\n}\n\nexport function createEvent(event: Event) {\n  return {\n    type: CREATE_EVENT,\n    payload: {\n      request: {\n        url: config.api.apiUrls.createEvent,\n        method: 'post',\n        data: {\n          event\n        },\n      }\n    } \n  }\n}\n","import { config } from './config'\nimport axios from 'axios'\nimport { mockAxios } from '../mocks/axios'\n\nclass Api {\n\n  constructor() {\n    this.client = axios.create({\n      baseURL: config.api.apiBaseUrl,\n      responseType: 'json'\n    })\n\n    if (process.env.REACT_APP_USE_MOCKS === 'true') {\n      mockAxios(this.client)\n    }\n  }\n\n  getAxiosClient() {\n    return this.client\n  }\n}\n\nexport const api = new Api()\n","import MockAdapter from 'axios-mock-adapter'\n\nconst DEFAULT_REQUEST_TIMEOUT = 1000\n\nexport function mockAxios(axios) {\n\n  const mock = new MockAdapter(axios)\n  const url = new RegExp(`/*`)\n\n  mock.onPost(url).reply(config => {\n    // All calls for get must have .json file with mocked response\n    const response = require(`./${config.url.replace('/', '')}.json`)\n    return new Promise(function (resolve, reject) {\n      setTimeout( () => {\n        resolve([ 200, response ])\n      }, DEFAULT_REQUEST_TIMEOUT)\n    })\n  })\n}\n","\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport reducer from './reducer'\nimport axiosMiddleware from 'redux-axios-middleware'\nimport { api } from './api'\nimport storage from 'redux-persist/lib/storage'\n\n// Persist redux state\nconst persistConfig = {\n  key: 'events-management',\n  storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, reducer)\n\n// Middlewares\nconst axios = applyMiddleware(axiosMiddleware(api.getAxiosClient()))\n\n/** Custom logger\n* See store state after each dispatch\n*/\nconst logger = applyMiddleware(store => next => action => {\n  next(action)\n  if (process.env.NODE_ENV === 'development') {  \n    console.log({\n        name: action.type,\n        value: store.getState()\n    })\n  }\n})\n\nexport const store = createStore(persistedReducer, compose(axios, logger))\nexport const persistor = persistStore(store)\n","// @flow\n\nimport React from 'react'\nimport Drawer from '@material-ui/core/Drawer'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Divider from '@material-ui/core/Divider'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport AddIcon from '@material-ui/icons/Add'\nimport EventIcon from '@material-ui/icons/Event'\nimport { Link } from 'react-router-dom'\n\nconst useStyles = makeStyles(theme => ({\ndrawer: {\n    width: theme.sizes.drawer.width\n  },\n  drawerPaper: {\n    width: theme.sizes.drawer.width,\n  },\n  toolbar: theme.mixins.toolbar,\n}))\n\nexport function LeftDrawer(props: any) {\n\n  const classes = useStyles()\n\n  return (\n    <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n        anchor=\"left\"\n      >\n        <div className={classes.toolbar} />\n        <Divider />\n\n        <List>\n          <ListItemLink\n            icon={<EventIcon />}\n            text='Events'\n            to='/events-management/events'\n            noPadding\n            />\n\n          <ListItemLink\n            icon={<AddIcon />}\n            text='Create events'\n            to='/events-management/create'\n            noPadding\n            />\n        </List>\n\n      </Drawer>\n  )\n}\n\nfunction ListItemLink(props) {\n  const { icon, text, to } = props\n\n  const renderLink = React.useMemo(\n    () =>\n      React.forwardRef((linkProps, ref) => (\n        <Link ref={ref} to={to} {...linkProps} />\n      )),\n      [to],\n  )\n\n  return (\n    <ListItem button component={renderLink} key={to}>\n      <ListItemIcon>{icon}</ListItemIcon>\n      <ListItemText primary={text} />\n    </ListItem>\n  )\n}\n","// @flow\n\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport type { State } from '../moduls/reducer'\nimport {\n  withRouter,\n  Switch,\n  Route,\n} from 'react-router-dom'\nimport { LeftDrawer } from '../components/leftDrawer'\nimport { Routes } from '../routes'\n\ntype Prop = {}\n\nclass Dashboard extends React.Component<Prop, any> {\n\n  routes: any\n\n  constructor(props: Prop) {\n    super(props)\n    const r = Routes.find( e => e.path === '/events-management')\n    this.routes = r && r.routes ? r.routes : []\n  }\n\n  render() {    \n    return (\n      <div style={Styles.wrapper}>\n        <LeftDrawer/>\n        <main style={Styles.content}>\n          <Switch>\n            {this.routes.map((route, index) => (\n              <Route\n                key={index}\n                path={route.path}\n                children={<route.component routes={route.routes} />}\n              />\n            ))}\n          </Switch>\n        </main>\n      </div>\n    )\n  }\n}\n\nconst Styles = {\n  wrapper: {\n    display: 'flex',\n  },\n  content: {\n    display: 'flex',\n    justifyConent: 'flex-start',\n    padding: 20,\n    flexGrow: 1,\n  }\n}\n\nconst stateToProps = (state: State) => {\n  return {}\n}\n\nconst mapDispatchToProps = {}\n\nexport default withRouter(connect(stateToProps, mapDispatchToProps)(Dashboard))\n","// @flow\n\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport type { State } from '../../moduls/reducer'\n\nimport Button from '@material-ui/core/Button'\n\nimport { withStyles } from '@material-ui/core/styles'\n\nconst useStyles = theme => ({\n  container: {\n    '& > Button': {\n      margin: theme.spacing(1)\n    }\n  }\n})\n\ntype Prop = {\n  classes: any\n}\n\nclass EventsToolbar extends React.Component<Prop, any> {\n\n  render() {\n    const { classes } = this.props\n    return (\n      <div className={classes.container}>\n        <Button variant=\"contained\">Some</Button>\n        <Button variant=\"contained\">other</Button>\n        <Button variant=\"contained\">filter or tools</Button>\n      </div>\n    )\n  }\n}\n\nconst stateToProps = (state: State) => {\n  return {\n    // e.g. filter eventsFilter\n  }\n}\n\nconst mapDispatchToProps = {\n  // tools method events\n}\n\nexport default connect(stateToProps, mapDispatchToProps)(withStyles(useStyles)(EventsToolbar))\n","// @flow\n\nimport React from 'react'\nimport type { Event } from '../../moduls/model'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport AccessTimeIcon from '@material-ui/icons/AccessTime'\nimport SubjectIcon from '@material-ui/icons/Subject'\nimport PeopleIcon from '@material-ui/icons/People'\n\nconst useStyles = makeStyles((theme) => ({\n  row: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingTop: '10px'\n  },\n  icon: {\n    width: theme.sizes.icons.regular\n  },\n  timeDate: {\n    fontSize: theme.typography.fontSizeMedium\n  }\n}))\n\nexport default function EventDescription(props: {event: Event}) {\n\n  const classes = useStyles()\n\n  return (\n    <div>\n      <div className={classes.row}>\n        <AccessTimeIcon className={classes.icon} />\n        <span className={classes.timeDate}>{`From: ${new Date(props.event.startTime).toLocaleString('sk')}`}</span>\n      </div>\n      <div className={classes.row}>\n        <AccessTimeIcon className={classes.icon} />\n        <span className={classes.timeDate}>{`To: ${new Date(props.event.endTime).toLocaleString('sk')}`}</span>\n      </div>\n      <div className={classes.row}>\n        <PeopleIcon className={classes.icon} />\n        <span>{props.event.participants.join(', ')}</span>\n      </div>\n      <div className={classes.row}>\n        <SubjectIcon className={classes.icon} />\n        <span>{props.event.note}</span>\n      </div>\n    </div>\n  )\n}\n","// @flow\n\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport type { Event } from '../../moduls/model'\nimport type { State } from '../../moduls/reducer'\n\nimport List from '@material-ui/core/List'\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel'\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\nimport Typography from '@material-ui/core/Typography'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport EventDescription from '../eventDescription/eventDescription'\nimport ListSubheader from '@material-ui/core/ListSubheader'\nimport Box from '@material-ui/core/Box'\n\nimport { withStyles } from '@material-ui/core/styles'\n\nconst useStyles = theme => ({\n  heading: {\n    fontSize: theme.typography.fontSizeLarge,\n    flexShrink: 0,\n  },\n  ListSubheader: {\n    backgroundColor: theme.palette.lightGrey\n  },\n  list: {\n    padding: 0\n  }\n})\n\ntype Prop = {\n  events: Array<Event>,\n  currentTime: number, // in milliseconds\n  classes: any\n}\n\nclass EventsList extends React.Component<Prop, any> {\n\n  constructor(props: Prop) {\n    super(props)\n    this.state = {\n      expandEventDetail: false\n    }\n  }\n\n  toggleItem(item: Event, event: any, expanded: boolean) {\n    this.setState({\n      expandEventDetail: expanded ? item.id : false\n    })\n  }\n\n  splitEventsByTime(events: Array<Event>, currentTime: number) {\n    const past = [], current = [], future = []\n    events.forEach( (event: Event) => {\n      const beginning = new Date(event.startTime).getTime()\n      const end = new Date(event.endTime).getTime()\n      if (end < currentTime) {\n        return past.push(event)\n      } else if (beginning < currentTime) {\n        return end > currentTime ? current.push(event) : future.push(event)\n      }\n      future.push(event)\n    })\n    return { past, current, future }\n  }\n\n  render() {\n    const { classes } = this.props\n    const { past, current, future } = this.splitEventsByTime(this.props.events, this.props.currentTime)\n    // this would be defined separatelly with all translations\n    const titles = ['Past events:', 'Current Events:', 'Upcoming events:']\n\n    return (\n      <Box l={0}>\n        <List className={classes.list} subheader={<li />}>\n          {[past, current, future].map((events, i) => (\n            <li key={`event-list-section-${i}`} data-testid={`event-list-section-${i}`} className={classes.listSection}>\n              <ul>\n                <ListSubheader className={classes.ListSubheader}>{`${titles[i]}`}</ListSubheader>\n                  {events.map( (e: Event) => (\n                    <ExpansionPanel\n                      key={`event-${e.id}`}\n                      expanded={this.state.expandEventDetail === e.id}\n                      onChange={this.toggleItem.bind(this, e)}\n                      >\n                      <ExpansionPanelSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1bh-content\"\n                        id=\"panel1bh-header\"\n                      >\n                        <Typography className={classes.heading}>{e.name}</Typography>\n                      </ExpansionPanelSummary>\n                      <ExpansionPanelDetails >\n                        <div data-testid=\"list-item\">\n                          <EventDescription event={e} />\n                        </div>\n                      </ExpansionPanelDetails>\n                    </ExpansionPanel>\n                  ))}\n              </ul>\n            </li>\n          ))}\n        </List>\n      </Box>\n    )\n  }\n}\n\nconst stateToProps = (state: State) => {\n  return {\n    events: state.events\n  }\n}\n\nconst mapDispatchToProps = {}\n\nexport default connect(stateToProps, mapDispatchToProps)(withStyles(useStyles)(EventsList))\n","// @flow\n\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport type { State, EventsFilter } from '../moduls/reducer'\nimport { fetchEvents } from '../moduls/reducer'\nimport type { Event } from '../moduls/model'\n\nimport Typography from '@material-ui/core/Typography'\nimport EventsToolbar from '../components/eventsToolbar/eventsToolbar'\nimport EventsList from '../components/eventsList/eventsList'\n\nimport { withStyles } from '@material-ui/core/styles'\n\nconst useStyles = theme => ({\n  root: {\n    width: '100%'\n  },\n  heading: {\n    fontSize: theme.typography.fontSizeLarge,\n    flexShrink: 0,\n  }\n})\n\ntype Prop = {\n  events: Array<Event>,\n  eventsFilter: EventsFilter,\n  classes: any,\n  fetchEvents: Function,\n}\n\nclass Events extends React.Component<Prop, any> {\n\n  componentDidMount() {\n    if (!this.props.events.length) {\n      this.props.fetchEvents(this.props.eventsFilter)\n    }\n    // additional reload on button actions, time since last update,... (e. g. in events toolbar)\n  }\n\n  render() {\n    const { classes } = this.props\n    return (\n      <div className={classes.root}>\n        <Typography variant=\"h5\">List of events</Typography>\n        <EventsToolbar />\n        <EventsList currentTime={new Date().getTime()} />\n      </div>\n    )\n  }\n}\n\nconst stateToProps = (state: State) => {\n  return {\n    events: state.events,\n    eventsFilter: state.eventsFilter\n  }\n}\n\nconst mapDispatchToProps = {\n  fetchEvents\n}\n\nexport default connect(stateToProps, mapDispatchToProps)(withStyles(useStyles)(Events))\n","import * as Yup from 'yup'\n\nexport const EventValidationSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Please enter minimum 2 characters')\n    .required('Required')\n})\n","// @flow\n\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport type { State } from '../../moduls/reducer'\nimport { createEvent } from '../../moduls/reducer'\nimport type { Event } from '../../moduls/model'\n\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport { DateTimePicker } from 'formik-material-ui-pickers'\nimport Button from '@material-ui/core/Button'\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers'\nimport DateFnsUtils from '@date-io/date-fns'\nimport { EventValidationSchema } from '../../moduls/validation'\n\nimport { withStyles } from '@material-ui/core/styles'\n\nconst useStyles = theme => ({\n  root: {\n    width: '400px',\n    '& > form': {\n      display: 'flex',\n      flexDirection: 'column'\n    }\n  }\n})\n\ntype Prop = {\n  event: Event,\n  classes: any,\n  createEvent: Function\n}\n\n// Soon release v4 - minDateTime (currently v4.0.0-alpha.7)\n// https://github.com/mui-org/material-ui-pickers/releases\nclass EventEdit extends React.Component<Prop, any> {\n\n  getDefaultEvent() {\n    return {\n      name: '',\n      startTime: new Date(),\n      endTime: null\n    }\n  }\n\n  onSubmit(values, { setSubmitting }) {\n    setSubmitting(false)\n    // if it was existing event, dispatch save event (to update) instead of create\n    this.props.createEvent(values)\n  }\n\n  hasErrors(errors) {\n    return !!Object.keys(errors).length\n  }\n\n  render() {\n    const event: any = this.props.event || this.getDefaultEvent()\n    const { classes } = this.props\n\n    return (\n      <div className={classes.root}>\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <Formik\n            initialValues={{ ...event }}\n            validationSchema={EventValidationSchema}\n            onSubmit={this.onSubmit.bind(this)}\n          >\n            {({ values, touched, isSubmitting, errors, submitForm }) => (\n              <Form autoComplete=\"off\">\n                <Field\n                  component={TextField}\n                  name=\"name\"\n                  type=\"text\" \n                  label=\"Name\"\n                  required />\n                <br />\n                <Field\n                  component={DateTimePicker}\n                  name=\"startTime\"\n                  label=\"Start of the event\"\n                  disablePast\n                  required />\n                <br />\n                <Field\n                  component={DateTimePicker}\n                  minDate={values.startTime}\n                  name=\"endTime\"\n                  label=\"End of the event\"\n                  required />\n                <br />\n                {/* This could be more complex input with */}\n                <Field\n                  component={TextField}\n                  name=\"participants\"\n                  type=\"text\" \n                  label=\"Participants\"\n                  placeholder=\"Silvia, Lubo, Martin\" />\n                <br />\n                <Field\n                  component={TextField}\n                  name=\"note\"\n                  type=\"text\"\n                  label=\"Note\"\n                  placeholder=\"During this event we'll talk...\"\n                  multiline\n                  rows={4} />\n                <br />\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={isSubmitting || this.hasErrors(errors)}\n                  onClick={submitForm}>Save</Button>\n              </Form>\n            )}\n          </Formik>\n        </MuiPickersUtilsProvider>\n      </div>\n    )\n  }\n}\n\nconst stateToProps = (state: State) => {\n  return {}\n}\n\nconst mapDispatchToProps = {\n  createEvent\n}\n\nexport default connect(stateToProps, mapDispatchToProps)(withStyles(useStyles)(EventEdit))\n","// @flow\n\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport type { State } from '../moduls/reducer'\nimport { createEvent } from '../moduls/reducer'\n\nimport Typography from '@material-ui/core/Typography'\nimport EventEdit from '../components/eventEdit/eventEdit'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst useStyles = theme => ({\n})\n\ntype Prop = {\n  classes: any,\n  createEvent: Function,\n}\n\nclass CreateEvent extends React.Component<Prop, any> {\n\n  render() {\n    const { classes } = this.props\n    return (\n      <div className={classes.root}>\n        <Typography variant=\"h5\">Create new event</Typography>\n        <EventEdit />\n      </div>\n    )\n  }\n}\n\nconst stateToProps = (state: State) => {\n  return {}\n}\n\nconst mapDispatchToProps = {\n  createEvent\n}\n\nexport default connect(stateToProps, mapDispatchToProps)(withStyles(useStyles)(CreateEvent))\n","import Dashboard from './screens/dashboard'\nimport Events from './screens/events'\nimport CreateEvent from './screens/createEvent'\n\nexport const Routes = [\n  {\n    path: '/events-management',\n    component: Dashboard,\n    routes: [\n      {\n        path: '/events-management/create',\n        component: CreateEvent,\n      },\n      {\n        path: '/events-management/events',\n        component: Events,\n      }\n    ]\n  },\n  {\n    path: '*',\n    component: Dashboard,\n  },\n]","// @flow\n\nimport { createMuiTheme } from '@material-ui/core/styles'\n\n// Credits to colors https://material.io/resources/color/#!/\n\nexport const LIGHT_THEME = createMuiTheme({\n  palette: {\n    type: 'light',\n    primary: {\n      light: '#5efc82',\n      main: '#00c853',\n      dark: '#009624',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#d7ffd9',\n      main: '#a5d6a7',\n      dark: '#75a478',\n      contrastText: '#fff',\n    },\n    lightGrey: '#eeeeee'\n  },\n  typography: {\n    h5: {\n      fontWeight: 500,\n    },\n    fontSizeSmall : 12,\n    fontSizeMedium : 14,\n    fontSizeLarge : 18\n  },\n  sizes: {\n    icons: {\n      regular: '60px'\n    },\n    drawer: {\n      width: 280\n    }\n  }\n})\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { store, persistor } from './moduls/redux'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom'\nimport { Routes } from './routes'\n\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport { LIGHT_THEME } from './theme'\n\nfunction RouteWithSubRoutes(route: any) {\n  return (\n    <Route\n      path={route.path}\n      render={props => (\n        <route.component {...props} routes={route.routes} />\n      )}\n    />\n  )\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <ThemeProvider theme={LIGHT_THEME}>\n          <CssBaseline />\n          <Router>\n            <Switch>\n              {Routes.map((route, i) => (\n                <RouteWithSubRoutes key={i} {...route} />\n              ))}\n            </Switch>\n          </Router>\n        </ThemeProvider>\n      </PersistGate>\n    </Provider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}